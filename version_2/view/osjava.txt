http://alvinalexander.com/blog/post/java/java-class-writes-reads-remote-socket




import java.io.*;
import java.net.*;
 
public class SocketClient
{
  Socket sock;
  String server = "ftpserver";
  int port = 5550;
  String filename = "/foo/bar/application1.log";
  String command = "tail -50 " + filename + "\n";
   
  public static void main(String[] args)
  {
    new SocketClient();
  }
   
  public SocketClient()
  {
    openSocket();
    try
    {
      // write to socket
      BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(sock.getOutputStream()));
      wr.write(command);
      wr.flush();
       
      // read from socket
      BufferedReader rd = new BufferedReader(new InputStreamReader(sock.getInputStream()));
      String str;
      while ((str = rd.readLine()) != null)
      {
        System.out.println(str);
      }
      rd.close();
    } 
    catch (IOException e) 
    {
      System.err.println(e);
    }
  }
   
  private void openSocket()
  {
    // open a socket and connect with a timeout limit
    try
    {
      InetAddress addr = InetAddress.getByName(server);
      SocketAddress sockaddr = new InetSocketAddress(addr, port);
      sock = new Socket();
   
      // this method will block for the defined number of milliseconds
      int timeout = 2000;
      sock.connect(sockaddr, timeout);
    } 
    catch (UnknownHostException e) 
    {
      e.printStackTrace();
    }
    catch (SocketTimeoutException e) 
    {
      e.printStackTrace();
    }
    catch (IOException e) 
    {
      e.printStackTrace();
    }
  }
}